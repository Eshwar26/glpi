name: glpi-agent
base: core20
summary: GLPI Agent runs inventory and other tasks on the behalf of a GLPI server
description: |
  GLPI Agent is an agent intended to run automatic inventory task (and possibly others)
  on the behalf of its configured GLPI server (https://glpi-project.org/).
  
  It starts as a daemon but does nothing by default. You must set its server
  configuration before expecting an inventory can be submitted to your
  GLPI server. The following command should be used for that purpose:
  
  sudo snap set glpi-agent server=http://your-glpi-server/
icon: share/html/logo.png
license: GPL-2.0
issues: https://github.com/glpi-project/glpi-agent/issues
source-code: https://github.com/glpi-project/glpi-agent
website: https://glpi-project.org/

confinement: classic

adopt-info: glpi-agent

architectures:
 - build-on: amd64

apps:
  glpi-agent:
    command: usr/bin/glpi-agent
    environment:
      LANG: C
      PATH: $SNAP/sbin:$SNAP/usr/sbin:$SNAP/usr/bin:$PATH
      PYTHONPATH: $SNAP/usr/share/glpi-agent/lib:$SNAP/usr/lib/python3/dist-packages
  esx:
    command: usr/bin/glpi-esx
    environment:
      LANG: C
      PATH: $SNAP/sbin:$SNAP/usr/sbin:$SNAP/usr/bin:$PATH
      PYTHONPATH: $SNAP/usr/share/glpi-agent/lib:$SNAP/usr/lib/python3/dist-packages
  inventory:
    command: usr/bin/glpi-inventory
    environment:
      LANG: C
      PATH: $SNAP/sbin:$SNAP/usr/sbin:$SNAP/usr/bin:$PATH
      PYTHONPATH: $SNAP/usr/share/glpi-agent/lib:$SNAP/usr/lib/python3/dist-packages
  injector:
    command: usr/bin/glpi-injector
    environment:
      LANG: C
      PATH: $SNAP/sbin:$SNAP/usr/sbin:$SNAP/usr/bin:$PATH
      PYTHONPATH: $SNAP/usr/share/glpi-agent/lib:$SNAP/usr/lib/python3/dist-packages
  netdiscovery:
    command: usr/bin/glpi-netdiscovery
    environment:
      LANG: C
      PATH: $SNAP/sbin:$SNAP/usr/sbin:$SNAP/usr/bin:$PATH
      PYTHONPATH: $SNAP/usr/share/glpi-agent/lib:$SNAP/usr/lib/python3/dist-packages
  netinventory:
    command: usr/bin/glpi-netinventory
    environment:
      LANG: C
      PATH: $SNAP/sbin:$SNAP/usr/sbin:$SNAP/usr/bin:$PATH
      PYTHONPATH: $SNAP/usr/share/glpi-agent/lib:$SNAP/usr/lib/python3/dist-packages
  remote:
    command: usr/bin/glpi-remote
    environment:
      LANG: C
      PATH: $SNAP/sbin:$SNAP/usr/sbin:$SNAP/usr/bin:$PATH
      PYTHONPATH: $SNAP/usr/share/glpi-agent/lib:$SNAP/usr/lib/python3/dist-packages
  wakeonlan:
    command: usr/bin/glpi-wakeonlan
    environment:
      LANG: C
      PATH: $SNAP/sbin:$SNAP/usr/sbin:$SNAP/usr/bin:$PATH
      PYTHONPATH: $SNAP/usr/share/glpi-agent/lib:$SNAP/usr/lib/python3/dist-packages
  daemon:
    command: usr/bin/glpi-agent --listen --no-fork --daemon
    daemon: simple
    restart-condition: on-success
    stop-timeout: 10s
    environment:
      LANG: C
      PATH: $SNAP/sbin:$SNAP/usr/sbin:$SNAP/usr/bin:$PATH
      PYTHONPATH: $SNAP/usr/share/glpi-agent/lib:$SNAP/usr/lib/python3/dist-packages

parts:
  python-deps:
    plugin: python
    python-packages:
      - requests
      - jsonschema
      - netifaces
      - pysnmp
      - pycryptodome
    stage-packages:
      - python3
      - python3-pip
      - python3-setuptools
      - python3-wheel
    override-stage: |
      snapcraftctl stage
      # Clean up unnecessary files to reduce snap size
      find $SNAPCRAFT_PART_INSTALL -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true
      find $SNAPCRAFT_PART_INSTALL -type f -name "*.pyc" -delete 2>/dev/null || true

  glpi-agent:
    after: [python-deps]
    plugin: nil
    source: .
    build-environment:
     - VERSION: "${TERM#*:}"
     - TERM: "${TERM%:*}"
    override-build: |
      export PATH=$SNAPCRAFT_STAGE/usr/bin:$PATH
      export PYTHONPATH=$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages:$PYTHONPATH
      
      # Determine version
      if [ -z "$VERSION" ]; then
        VERSION=$(python3 -c "import sys; sys.path.insert(0, 'GLPI-Agent/lib'); from GLPI.Agent.Version import VERSION; print(VERSION)" 2>/dev/null || echo "1.7.0")
        if [ -d .git ]; then
          VERSION="${VERSION%-dev}-git$(git rev-parse --short HEAD)"
        fi
      fi
      snapcraftctl set-version "$VERSION"
      case "$VERSION" in
        *-dev|*-git*|*-beta*|*-test*)
          snapcraftctl set-grade "devel"
          ;;
        *)
          snapcraftctl set-grade "stable"
          ;;
      esac
      
      # Install Python agent files
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/bin
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share/glpi-agent/lib
      mkdir -p $SNAPCRAFT_PART_INSTALL/etc/glpi-agent
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share/glpi-agent/share
      
      # Copy Python library
      cp -a GLPI-Agent/lib/GLPI $SNAPCRAFT_PART_INSTALL/usr/share/glpi-agent/lib/
      cp -a GLPI-Agent/lib/setup.py $SNAPCRAFT_PART_INSTALL/usr/share/glpi-agent/lib/
      
      # Copy executables and make them use snap Python
      for script in GLPI-Agent/bin/glpi-*.py; do
        [ -f "$script" ] || continue
        target=$(basename "$script" .py)
        # Write wrapper script that uses snap Python
        cat > $SNAPCRAFT_PART_INSTALL/usr/bin/$target <<'WRAPPER'
#!/bin/sh
export PYTHONPATH=/snap/glpi-agent/current/usr/share/glpi-agent/lib:/snap/glpi-agent/current/usr/lib/python3/dist-packages:$PYTHONPATH
exec /snap/glpi-agent/current/usr/bin/python3 /snap/glpi-agent/current/usr/share/glpi-agent/lib/$(basename $0).py "$@"
WRAPPER
        chmod +x $SNAPCRAFT_PART_INSTALL/usr/bin/$target
        # Copy the actual Python script
        cp "$script" $SNAPCRAFT_PART_INSTALL/usr/share/glpi-agent/lib/$(basename $target).py
      done
      
      # Copy configuration files
      cp -a GLPI-Agent/etc/*.cfg $SNAPCRAFT_PART_INSTALL/etc/glpi-agent/
      
      # Copy shared data files
      cp -a GLPI-Agent/share/* $SNAPCRAFT_PART_INSTALL/usr/share/glpi-agent/share/
      
      # We will use SNAP_DATA folder to support configuration with snap command
      echo "include /var/snap/glpi-agent/current" >>$SNAPCRAFT_PART_INSTALL/etc/glpi-agent/agent.cfg
      
      # HTTP plugins configuration files should include .local file from /var/snap/glpi-agent/current
      sed -ri -e 's/^include "/include "\/var\/snap\/glpi-agent\/current\//' $SNAPCRAFT_PART_INSTALL/etc/glpi-agent/*-plugin.cfg 2>/dev/null || true
      
      # SNMP Advanced configuration file should include .local file from /var/snap/glpi-agent/current
      sed -ri -e 's/^include "/include "\/var\/snap\/glpi-agent\/current\//' $SNAPCRAFT_PART_INSTALL/etc/glpi-agent/snmp-advanced-support.cfg 2>/dev/null || true
    build-packages:
     - git
    stage-packages:
     - pciutils
     - usbutils
     - hdparm
     - try:
       - dmidecode
    stage:
      - usr/bin/glpi-*
      - usr/bin/lspci
      - usr/bin/lsusb
      - sbin/hdparm
      - usr/sbin/dmidecode
      - etc/glpi-agent
      - usr/share/glpi-agent
      - lib
      - -lib/hdparm
      - -lib/systemd
      - -lib/udev
      - usr/lib
      - -usr/lib/perl5
      - -usr/lib/pm-utils
